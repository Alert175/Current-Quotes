import { observer } from "mobx-react-lite";
import theme from '../../store/theme';
import ThemeIcon from './themeIcon'
import Link from 'next/link'
import {useState, useEffect} from 'react'

import classes from './style.module.scss'

 const NavBar = observer(() => {

  const [widthView, setwidthView] = useState(0)
  const [links, setlinks] = useState([
    {
      text: 'Главная',
      path: '/'
    },
    {
      text: 'Валюты',
      path: '/'
    },
    {
      text: 'Калькулятор',
      path: '/'
    }
  ])

  useEffect(() => {
    setwidthView(document.body.clientWidth)
  }, [widthView]);

  return(
    <div 
      className={`${classes.wrapper} wrapper`}
      style={{
        backgroundColor: widthView < 1050
          ? theme.active === 'dark'
            ? 'rgba(42, 42, 42, 0.8)' : 'rgba(255, 255, 255, 0.8)'
          : theme.active === 'dark'
            ? '#000000' : '#FFFFFF',
        color: theme.active === 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
      }}
    >
      <div className={`${classes.content} content column`}>
        <div className={`${classes.containerLogo} column`}>
          {/* <img className={classes.logo} src="/Images/Navbar/black_logo.svg" alt=""/> */}
          <svg 
            className={classes.logo}viewBox="0 0 105 63"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
          >
            <rect
              rx="15"
              style={{
                fill: theme.active === 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
              }}
            />
            <path
              style={{
                fill: theme.active !== 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
              }}
              d="M35.064 47.48C31.672 47.48 28.6 46.744 25.848 45.272C23.128 43.768 20.984 41.704 19.416 39.08C17.88 36.456 17.112 33.496 17.112 30.2C17.112 26.904 17.896 23.944 19.464 21.32C21.032 18.696 23.176 16.648 25.896 15.176C28.648 13.672 31.72 12.92 35.112 12.92C37.864 12.92 40.376 13.4 42.648 14.36C44.92 15.32 46.84 16.712 48.408 18.536L44.376 22.328C41.944 19.704 38.952 18.392 35.4 18.392C33.096 18.392 31.032 18.904 29.208 19.928C27.384 20.92 25.96 22.312 24.936 24.104C23.912 25.896 23.4 27.928 23.4 30.2C23.4 32.472 23.912 34.504 24.936 36.296C25.96 38.088 27.384 39.496 29.208 40.52C31.032 41.512 33.096 42.008 35.4 42.008C38.952 42.008 41.944 40.68 44.376 38.024L48.408 41.864C46.84 43.688 44.904 45.08 42.6 46.04C40.328 47 37.816 47.48 35.064 47.48ZM89.1559 50.36C88.0359 51.672 86.7239 52.664 85.2199 53.336C83.7479 54.008 82.1319 54.344 80.3719 54.344C78.0679 54.344 75.9559 53.816 74.0359 52.76C72.1159 51.736 69.9239 49.944 67.4599 47.384C64.3559 47.128 61.5719 46.232 59.1079 44.696C56.6439 43.128 54.7239 41.096 53.3479 38.6C51.9719 36.072 51.2839 33.272 51.2839 30.2C51.2839 26.936 52.0679 23.992 53.6359 21.368C55.2039 18.712 57.3639 16.648 60.1159 15.176C62.8679 13.672 65.9559 12.92 69.3799 12.92C72.8039 12.92 75.8919 13.672 78.6439 15.176C81.3959 16.648 83.5559 18.696 85.1239 21.32C86.6919 23.944 87.4759 26.904 87.4759 30.2C87.4759 32.856 86.9479 35.32 85.8919 37.592C84.8359 39.832 83.3639 41.752 81.4759 43.352C79.5879 44.92 77.3959 46.056 74.8999 46.76C75.8279 47.752 76.7399 48.472 77.6359 48.92C78.5319 49.368 79.4919 49.592 80.5159 49.592C82.7239 49.592 84.6439 48.696 86.2759 46.904L89.1559 50.36ZM57.5719 30.2C57.5719 32.44 58.0839 34.472 59.1079 36.296C60.1319 38.088 61.5399 39.496 63.3319 40.52C65.1239 41.512 67.1399 42.008 69.3799 42.008C71.6199 42.008 73.6359 41.512 75.4279 40.52C77.2199 39.496 78.6279 38.088 79.6519 36.296C80.6759 34.472 81.1879 32.44 81.1879 30.2C81.1879 27.96 80.6759 25.944 79.6519 24.152C78.6279 22.328 77.2199 20.92 75.4279 19.928C73.6359 18.904 71.6199 18.392 69.3799 18.392C67.1399 18.392 65.1239 18.904 63.3319 19.928C61.5399 20.92 60.1319 22.328 59.1079 24.152C58.0839 25.944 57.5719 27.96 57.5719 30.2Z"
            />
          </svg>
          <div 
            className={`${classes.text} center-items`}
            style={{
              color: theme.active === 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
            }}
          >Current Quotes</div>
        </div>
        <div className={`${classes.containerLink} column`}>
            {
              links.map(
                element => 
                <Link href={element.path} key={`key-${element.text}`}>
                  <span
                    className={`${classes.link}`}
                    style={{
                      color: theme.active === 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
                    }}
                  >
                    {element.text}
                  </span>
                </Link>
              )
            }
        </div>
        <div className={`${classes.containerIcon} column`}>
          <div className={classes.themeIcon}>
            <ThemeIcon/>
          </div>
          <svg className={classes.userIcon} viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle
              cx="30"
              cy="30"
              r="29.5"
              fill="none"
            />
            <path
              className={classes.path}
              d="M30.1321 31.1696C30.1766 31.1696 30.2211 31.1696 30.2745 31.1696C30.2924 31.1696 30.3102 31.1696 30.328 31.1696C30.3547 31.1696 30.3903 31.1696 30.417 31.1696C33.026 31.1251 35.1364 30.2079 36.6947 28.4537C40.123 24.5891 39.5531 17.9642 39.4907 17.332C39.2681 12.5858 37.0242 10.3152 35.172 9.25554C33.7918 8.46304 32.1801 8.03562 30.3814 8H30.3191C30.3102 8 30.2924 8 30.2835 8H30.23C29.2416 8 27.3004 8.16028 25.4394 9.21992C23.5694 10.2796 21.2899 12.5502 21.0673 17.332C21.0049 17.9642 20.435 24.5891 23.8633 28.4537C25.4127 30.2079 27.523 31.1251 30.1321 31.1696ZM23.4448 17.5546C23.4448 17.5279 23.4537 17.5011 23.4537 17.4833C23.7475 11.0988 28.2799 10.4131 30.2211 10.4131H30.2567C30.2745 10.4131 30.3013 10.4131 30.328 10.4131C32.7322 10.4666 36.8194 11.4461 37.0954 17.4833C37.0954 17.51 37.0954 17.5368 37.1043 17.5546C37.1132 17.6169 37.7365 23.672 34.9049 26.8598C33.7829 28.1243 32.287 28.7476 30.3191 28.7654C30.3013 28.7654 30.2924 28.7654 30.2745 28.7654C30.2567 28.7654 30.2478 28.7654 30.23 28.7654C28.271 28.7476 26.7662 28.1243 25.6531 26.8598C22.8304 23.6898 23.4359 17.608 23.4448 17.5546Z"
              style={{
                fill: theme.active === 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
              }}
            />
            <path
              className={classes.path}
              d="M48.5733 42.1578C48.5733 42.1489 48.5733 42.14 48.5733 42.1311C48.5733 42.0598 48.5644 41.9886 48.5644 41.9085C48.511 40.1454 48.3953 36.0226 44.5307 34.7047C44.504 34.6958 44.4684 34.6869 44.4416 34.678C40.4257 33.654 37.0865 31.3388 37.0509 31.3121C36.5077 30.9292 35.7597 31.0627 35.3768 31.6059C34.9939 32.1491 35.1275 32.8971 35.6707 33.28C35.8221 33.3868 39.3661 35.8534 43.8005 36.9932C45.8753 37.7322 46.1068 39.9495 46.1691 41.9797C46.1691 42.0598 46.1691 42.1311 46.178 42.2023C46.1869 43.0037 46.1335 44.2414 45.991 44.9538C44.5485 45.773 38.8941 48.6047 30.2923 48.6047C21.7262 48.6047 16.0362 45.7641 14.5847 44.9449C14.4423 44.2325 14.3799 42.9948 14.3977 42.1934C14.3977 42.1222 14.4066 42.0509 14.4066 41.9708C14.469 39.9406 14.7005 37.7233 16.7753 36.9843C21.2097 35.8445 24.7537 33.369 24.9051 33.2711C25.4483 32.8882 25.5818 32.1402 25.1989 31.597C24.816 31.0538 24.0681 30.9203 23.5249 31.3032C23.4893 31.3299 20.1679 33.6451 16.1341 34.6691C16.0985 34.678 16.0718 34.6869 16.0451 34.6958C12.1805 36.0226 12.0648 40.1454 12.0113 41.8996C12.0113 41.9797 12.0113 42.0509 12.0024 42.1222C12.0024 42.1311 12.0024 42.14 12.0024 42.1489C11.9935 42.6119 11.9846 44.9894 12.4566 46.1826C12.5456 46.4142 12.7059 46.6101 12.9196 46.7436C13.1867 46.9217 19.5891 51 30.3012 51C41.0134 51 47.4158 46.9128 47.6829 46.7436C47.8877 46.6101 48.0569 46.4142 48.1459 46.1826C48.5912 44.9983 48.5823 42.6208 48.5733 42.1578Z"
              style={{
                fill: theme.active === 'dark' ? '#ffffff' : 'rgba(0, 0, 0, 0.8)'
              }}
            />
          </svg>
        </div>
      </div>
    </div>
  )
})

export default NavBar;